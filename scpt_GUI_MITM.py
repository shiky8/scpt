# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SCPT_gui_MITM.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow_Mitm(object):
    def setupUi(self, MainWindow_MITM):
        MainWindow_MITM.setObjectName("MainWindow")
        MainWindow_MITM.resize(1434, 726)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("scpt.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow_MITM.setWindowIcon(icon)
        # finish = QAction("Quit", self)
        # finish.triggered.connect(self.closeEvent)
        self.centralwidget = QtWidgets.QWidget(MainWindow_MITM)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(30, 10, 88, 34))
        self.pushButton.setStyleSheet("background-color: rgb(0, 0, 255);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(620, 10, 88, 34))
        self.pushButton_2.setStyleSheet("background-color: rgb(0, 0, 255);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(1000, 10, 88, 34))
        self.pushButton_3.setStyleSheet("background-color: rgb(0, 0, 255);")
        self.pushButton_3.setObjectName("pushButton_3")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(0, 90, 451, 511))
        self.frame.setStyleSheet("background-color: rgb(170, 0, 127);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(10, 30, 71, 18))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setGeometry(QtCore.QRect(10, 140, 58, 18))
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(self.frame)
        self.lineEdit.setGeometry(QtCore.QRect(90, 30, 141, 32))
        self.lineEdit.setObjectName("lineEdit")
        self.textEdit = QtWidgets.QTextEdit(self.frame)
        self.textEdit.setGeometry(QtCore.QRect(60, 120, 371, 371))
        self.textEdit.setObjectName("textEdit")
        self.pushButton_4 = QtWidgets.QPushButton(self.frame)
        self.pushButton_4.setGeometry(QtCore.QRect(240, 60, 88, 34))
        self.pushButton_4.setStyleSheet("background-color: rgb(0, 0, 255);")
        self.pushButton_4.setObjectName("pushButton_4")
        # self.label_9 = QtWidgets.QLabel(self.frame)
        # self.label_9.setGeometry(QtCore.QRect(10, 70, 58, 18))
        # self.label_9.setObjectName("label_9")
        # self.lineEdit_4 = QtWidgets.QLineEdit(self.frame)
        # self.lineEdit_4.setGeometry(QtCore.QRect(90, 70, 141, 32))
        # self.lineEdit_4.setObjectName("lineEdit_4")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(470, 90, 441, 511))
        self.frame_2.setStyleSheet("background-color: rgb(0, 0, 127);\n"
"")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.pushButton_5 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_5.setGeometry(QtCore.QRect(300, 140, 88, 34))
        self.pushButton_5.setStyleSheet("background-color: rgb(0, 0, 255);")
        self.pushButton_5.setObjectName("pushButton_5")
        self.label_3 = QtWidgets.QLabel(self.frame_2)
        self.label_3.setGeometry(QtCore.QRect(20, 30, 58, 18))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.frame_2)
        self.label_4.setGeometry(QtCore.QRect(20, 100, 58, 18))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.frame_2)
        self.label_5.setGeometry(QtCore.QRect(20, 200, 58, 18))
        self.label_5.setObjectName("label_5")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_2.setGeometry(QtCore.QRect(90, 30, 191, 32))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_3.setGeometry(QtCore.QRect(90, 90, 191, 32))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.textEdit_2 = QtWidgets.QTextEdit(self.frame_2)
        self.textEdit_2.setGeometry(QtCore.QRect(90, 190, 331, 311))
        self.textEdit_2.setObjectName("textEdit_2")
        # self.label_8 = QtWidgets.QLabel(self.frame_2)
        # self.label_8.setGeometry(QtCore.QRect(20, 150, 58, 18))
        # self.label_8.setObjectName("label_8")
        # self.lineEdit_5 = QtWidgets.QLineEdit(self.frame_2)
        # self.lineEdit_5.setGeometry(QtCore.QRect(90, 140, 191, 32))
        # self.lineEdit_5.setObjectName("lineEdit_5")
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setGeometry(QtCore.QRect(920, 90, 491, 511))
        self.frame_3.setStyleSheet("background-color: rgb(0, 85, 127);")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.textEdit_3 = QtWidgets.QTextEdit(self.frame_3)
        self.textEdit_3.setGeometry(QtCore.QRect(100, 110, 311, 361))
        self.textEdit_3.setObjectName("textEdit_3")
        self.label_6 = QtWidgets.QLabel(self.frame_3)
        self.label_6.setGeometry(QtCore.QRect(30, 120, 58, 18))
        self.label_6.setObjectName("label_6")
        self.pushButton_6 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_6.setGeometry(QtCore.QRect(260, 40, 88, 34))
        self.pushButton_6.setStyleSheet("background-color: rgb(0, 0, 255);")
        self.pushButton_6.setObjectName("pushButton_6")
        self.label_7 = QtWidgets.QLabel(self.frame_3)
        self.label_7.setGeometry(QtCore.QRect(40, 50, 58, 18))
        self.label_7.setObjectName("label_7")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.frame_3)
        self.lineEdit_6.setGeometry(QtCore.QRect(120, 40, 131, 32))
        self.lineEdit_6.setObjectName("lineEdit_6")
        MainWindow_MITM.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow_MITM)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1434, 30))
        self.menubar.setObjectName("menubar")
        self.menuwindows = QtWidgets.QMenu(self.menubar)
        self.menuwindows.setObjectName("menuwindows")
        self.menupayload = QtWidgets.QMenu(self.menuwindows)
        self.menupayload.setObjectName("menupayload")
        self.menuhelp = QtWidgets.QMenu(self.menubar)
        self.menuhelp.setObjectName("menuhelp")
        MainWindow_MITM.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow_MITM)
        self.statusbar.setObjectName("statusbar")
        MainWindow_MITM.setStatusBar(self.statusbar)
        self.actionabout = QtWidgets.QAction(MainWindow_MITM)
        self.actionabout.setObjectName("actionabout")
        self.actionWEB = QtWidgets.QAction(MainWindow_MITM)
        self.actionWEB.setObjectName("actionWEB")
        self.actioncryptography = QtWidgets.QAction(MainWindow_MITM)
        self.actioncryptography.setObjectName("actioncryptography")
        self.actionBrute_force = QtWidgets.QAction(MainWindow_MITM)
        self.actionBrute_force.setObjectName("actionBrute_force")
        self.actionPhishing = QtWidgets.QAction(MainWindow_MITM)
        self.actionPhishing.setObjectName("actionPhishing")
        self.actionbtc_exploit = QtWidgets.QAction(MainWindow_MITM)
        self.actionbtc_exploit.setObjectName("actionbtc_exploit")
        self.actiongoogle_dork = QtWidgets.QAction(MainWindow_MITM)
        self.actiongoogle_dork.setObjectName("actiongoogle_dork")
        self.actionport_scan = QtWidgets.QAction(MainWindow_MITM)
        self.actionport_scan.setObjectName("actionport_scan")
        self.actionVulnerability_scan = QtWidgets.QAction(MainWindow_MITM)
        self.actionVulnerability_scan.setObjectName("actionVulnerability_scan")
        self.actiongenerate_payload = QtWidgets.QAction(MainWindow_MITM)
        self.actiongenerate_payload.setObjectName("actiongenerate_payload")
        self.actionbotnet = QtWidgets.QAction(MainWindow_MITM)
        self.actionbotnet.setObjectName("actionbotnet")
        self.actionreverseShell = QtWidgets.QAction(MainWindow_MITM)
        self.actionreverseShell.setObjectName("actionreverseShell")
        self.menupayload.addAction(self.actiongenerate_payload)
        self.menupayload.addAction(self.actionbotnet)
        self.menupayload.addAction(self.actionreverseShell)
        self.menuwindows.addAction(self.actionWEB)
        self.menuwindows.addAction(self.actioncryptography)
        self.menuwindows.addAction(self.menupayload.menuAction())
        self.menuwindows.addAction(self.actionBrute_force)
        self.menuwindows.addAction(self.actionPhishing)
        self.menuwindows.addAction(self.actionbtc_exploit)
        self.menuwindows.addAction(self.actiongoogle_dork)
        self.menuwindows.addAction(self.actionport_scan)
        self.menuwindows.addAction(self.actionVulnerability_scan)
        self.menuhelp.addAction(self.actionabout)
        self.menubar.addAction(self.menuwindows.menuAction())
        self.menubar.addAction(self.menuhelp.menuAction())

        self.frame_2.hide()
        self.frame.hide()
        self.frame_3.hide()

        self.retranslateUi(MainWindow_MITM)
        self.pushButton.clicked.connect(self.frame.show)
        self.pushButton.clicked.connect(self.frame_2.hide)
        self.pushButton.clicked.connect(self.frame_3.hide)
        self.pushButton_2.clicked.connect(self.frame.hide)
        self.pushButton_2.clicked.connect(self.frame_2.show)
        self.pushButton_2.clicked.connect(self.frame_3.hide)
        self.pushButton_3.clicked.connect(self.frame_3.show)
        self.pushButton_3.clicked.connect(self.frame_2.show)
        self.pushButton_3.clicked.connect(self.frame.hide)
        try:
            app.aboutToQuit.connect(self.closeEvent)
        except:
          pass
        QtCore.QMetaObject.connectSlotsByName(MainWindow_MITM)

    def closeEvent(self):
        # Your desired functionality here
        from mitm import arp_spoof
        target_ip = str(self.lineEdit_2.text())
        host_ip = str(self.lineEdit_3.text())
        self.threads = []

        arpth = arp_spoof.Arp_SpoofMITM()
        arpth.resete_target(target_ip, host_ip)
        arpth.resete_target(host_ip, target_ip)
        # arpth.Gui_Date_output.connect(self.arp_on_data_ready)
        # self.threads.append(arpth)
        # arpth.start()
        print('Close button pressed')
        # import sys
        # sys.exit(0)

    def aboutss(self):
        from scpt_GUI_about import Ui_MainWindow_about
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_about()
        self.ui.setupUi(self.Form)
        # MainWindow_MITM.close()
        self.Form.show()

    def websss(self, MainWindow_MITM):
        from scpt_GUI_Web_scan import Ui_MainWindow_WS
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_WS()
        self.ui.setupUi(self.Form)
        MainWindow_MITM.close()
        self.Form.show()



    def crptosss(self, MainWindow_MITM):
        from scpt_GUI_cryptography import Ui_MainWindow_crypto
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_crypto()
        self.ui.setupUi(self.Form)
        MainWindow_MITM.close()
        self.Form.show()

    def Payload_G(self, MainWindow_MITM):
        from scpt_GUI_generate_payload import Ui_MainWindow_GP
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_GP()
        self.ui.setupUi(self.Form)
        MainWindow_MITM.close()
        self.Form.show()

    def Payload_Rev(self, MainWindow_MITM):
        from scpt_GUI_Reverse_shell import Ui_MainWindow_RS
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_RS()
        self.ui.setupUi(self.Form)
        MainWindow_MITM.close()
        self.Form.show()

    def Payload_bot(self, MainWindow_MITM):
        from scpt_GUI_botnet import Ui_MainWindow_botnet
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_botnet()
        self.ui.setupUi(self.Form)
        MainWindow_MITM.close()
        self.Form.show()

    def Brutessss(self, MainWindow_MITM):
        from scpt_GUI_brute_force import Ui_MainWindow_brute
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_brute()
        self.ui.setupUi(self.Form)
        MainWindow_MITM.close()
        self.Form.show()

    def Phisssss(self, MainWindow_MITM):
        from scpt_GUI_Phishing import Ui_MainWindow_Ph
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_Ph()
        self.ui.setupUi(self.Form)
        MainWindow_MITM.close()
        self.Form.show()

    def BTC_esss(self, MainWindow_MITM):
        from scpt_GUI_btc_exploit import Ui_MainWindow_btc
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_btc()
        self.ui.setupUi(self.Form)
        MainWindow_MITM.close()
        self.Form.show()

    def Googlesss(self, MainWindow_MITM):
        from scpt_GUI_Google_Dork import Ui_MainWindow_GD
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_GD()
        self.ui.setupUi(self.Form)
        MainWindow_MITM.close()
        self.Form.show()

    def Port_scansss(self, MainWindow_MITM):
        from scpt_GUI_Port_scan import Ui_MainWindow_PS
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_PS()
        self.ui.setupUi(self.Form)
        MainWindow_MITM.close()
        self.Form.show()

    def vunlssss(self, MainWindow_MITM):
        from scpt_GUI_vulnerability_search import Ui_MainWindow_VS
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_VS()
        self.ui.setupUi(self.Form)
        MainWindow_MITM.close()
        self.Form.show()

    def div_on_data_ready(self, data):
        print(data)
        self.textEdit.append(str(data))
    def div_gui(self):
        from mitm import divice_scann
        target_ip = str(self.lineEdit.text())
        self.threads = []
        divth = divice_scann.GUI(target_ip)
        divth.Gui_Date_output.connect(self.div_on_data_ready)
        self.threads.append(divth)
        divth.start()
    def arp_on_data_ready(self, data):
        print(data)
        self.textEdit_2.append(str(data))
    def arp_gui(self):
        from mitm import arp_spoof
        target_ip = str(self.lineEdit_2.text())
        host_ip = str(self.lineEdit_3.text())
        self.threads = []
        arpth = arp_spoof.GUI(target_ip,host_ip)
        arpth.Gui_Date_output.connect(self.arp_on_data_ready)
        self.threads.append(arpth)
        arpth.start()
    def http_on_data_ready(self, data):
        print(data)
        self.textEdit_3.append(str(data))

    def http_gui(self):
        from mitm import http_request3333
        inface = str(self.lineEdit_6.text())
        self.threads = []
        httpth = http_request3333.GUI(inface)
        httpth.Gui_Date_output.connect(self.http_on_data_ready)
        self.threads.append(httpth)
        httpth.start()



    def retranslateUi(self, MainWindow_MITM):
        _translate = QtCore.QCoreApplication.translate
        MainWindow_MITM.setWindowTitle(_translate("MainWindow", "SCPT-MITM"))
        self.pushButton.setText(_translate("MainWindow", "divce_search"))
        self.pushButton_2.setText(_translate("MainWindow", "apr_spoofing"))
        self.pushButton_3.setText(_translate("MainWindow", "http_sneffing"))
        self.label.setText(_translate("MainWindow", "ip_range:"))
        self.label_2.setText(_translate("MainWindow", "output:"))
        self.pushButton_4.setText(_translate("MainWindow", "sub"))
        self.pushButton_4.clicked.connect(self.div_gui)
        # self.label_9.setText(_translate("MainWindow", "interface:"))
        self.pushButton_5.setText(_translate("MainWindow", "sub"))
        self.pushButton_5.clicked.connect(self.arp_gui)
        self.label_3.setText(_translate("MainWindow", "target_ip:"))
        self.label_4.setText(_translate("MainWindow", "getway:"))
        self.label_5.setText(_translate("MainWindow", "output:"))
        # self.label_8.setText(_translate("MainWindow", "interface:"))
        self.label_6.setText(_translate("MainWindow", "output:"))
        self.pushButton_6.setText(_translate("MainWindow", "snef"))
        self.pushButton_6.clicked.connect(self.http_gui)
        self.label_7.setText(_translate("MainWindow", "interface:"))
        self.menuwindows.setTitle(_translate("MainWindow", "windows"))
        self.menupayload.setTitle(_translate("MainWindow", "payload"))
        self.menuhelp.setTitle(_translate("MainWindow", "help"))
        self.actionabout.setText(_translate("MainWindow", "about"))
        self.actionWEB.setText(_translate("MainWindow", "WEB"))
        self.actioncryptography.setText(_translate("MainWindow", "cryptography"))
        self.actionBrute_force.setText(_translate("MainWindow", "Brute-force"))
        self.actionPhishing.setText(_translate("MainWindow", "Phishing"))
        self.actionbtc_exploit.setText(_translate("MainWindow", "btc-exploit"))
        self.actiongoogle_dork.setText(_translate("MainWindow", "google-dork"))
        self.actionport_scan.setText(_translate("MainWindow", "port-scan"))
        self.actionVulnerability_scan.setText(_translate("MainWindow", "Vulnerability-scan"))
        self.actiongenerate_payload.setText(_translate("MainWindow", "generate-payload"))
        self.actionbotnet.setText(_translate("MainWindow", "botnet"))
        self.actionreverseShell.setText(_translate("MainWindow", "reverseShell"))

        self.actionWEB.triggered.connect(lambda:self.websss(MainWindow_MITM))
        self.actioncryptography.triggered.connect(lambda:self.crptosss(MainWindow_MITM))
        self.actionBrute_force.triggered.connect(lambda:self.Brutessss(MainWindow_MITM))
        self.actionPhishing.triggered.connect(lambda:self.Phisssss(MainWindow_MITM))
        self.actiongenerate_payload.triggered.connect(lambda:self.Payload_G(MainWindow_MITM))
        self.actionreverseShell.triggered.connect(lambda:self.Payload_Rev(MainWindow_MITM))
        self.actionbotnet.triggered.connect(lambda:self.Payload_bot(MainWindow_MITM))
        self.actionbtc_exploit.triggered.connect(lambda:self.BTC_esss(MainWindow_MITM))
        self.actiongoogle_dork.triggered.connect(lambda:self.Googlesss(MainWindow_MITM))
        self.actionport_scan.triggered.connect(lambda:self.Port_scansss(MainWindow_MITM))
        self.actionVulnerability_scan.triggered.connect(lambda:self.vunlssss(MainWindow_MITM))
        self.actionabout.triggered.connect(self.aboutss)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow_MITM = QtWidgets.QMainWindow()
    ui = Ui_MainWindow_Mitm()
    ui.setupUi(MainWindow_MITM)
    MainWindow_MITM.show()
    sys.exit(app.exec_())
