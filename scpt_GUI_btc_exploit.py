# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'scpt_gui_btc_exploit.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow_btc(object):
    def setupUi(self, MainWindow_btc):
        MainWindow_btc.setObjectName("MainWindow")
        MainWindow_btc.resize(1105, 617)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("scpt.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow_btc.setWindowIcon(icon)
        MainWindow_btc.setStyleSheet("background-color: rgb(255, 0, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow_btc)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(0, 50, 451, 501))
        self.frame.setStyleSheet("background-color: rgb(85, 85, 255);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(20, 90, 58, 18))
        self.label.setStyleSheet("background-color: rgb(255, 85, 255);")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setGeometry(QtCore.QRect(20, 190, 58, 18))
        self.label_2.setStyleSheet("background-color: rgb(170, 85, 255);")
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(self.frame)
        self.lineEdit.setGeometry(QtCore.QRect(50, 80, 291, 32))
        self.lineEdit.setObjectName("lineEdit")
        self.textEdit = QtWidgets.QTextEdit(self.frame)
        self.textEdit.setGeometry(QtCore.QRect(70, 160, 351, 291))
        self.textEdit.setStyleSheet("")
        self.textEdit.setObjectName("textEdit")
        self.pushButton_3 = QtWidgets.QPushButton(self.frame)
        self.pushButton_3.setGeometry(QtCore.QRect(350, 80, 88, 34))
        self.pushButton_3.setStyleSheet("background-color: rgb(170, 85, 255);")
        self.pushButton_3.setObjectName("pushButton_3")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(500, 50, 581, 561))
        self.frame_2.setStyleSheet("background-color: rgb(85, 0, 255);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.pushButton_4 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_4.setGeometry(QtCore.QRect(450, 370, 88, 34))
        self.pushButton_4.setStyleSheet("background-color: rgb(170, 85, 255);")
        self.pushButton_4.setObjectName("pushButton_4")

        self.lineEdit_77 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_77.setGeometry(QtCore.QRect(100, 30, 351, 32))
        self.lineEdit_77.setObjectName("lineEdit_77")

        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_2.setGeometry(QtCore.QRect(100, 80, 351, 32))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_3.setGeometry(QtCore.QRect(100, 160, 351, 32))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_4.setGeometry(QtCore.QRect(100, 220, 351, 32))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_5.setGeometry(QtCore.QRect(110, 300, 341, 32))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_6.setGeometry(QtCore.QRect(100, 370, 341, 32))
        self.lineEdit_6.setObjectName("lineEdit_6")

        self.label_77 = QtWidgets.QLabel(self.frame_2)
        self.label_77.setGeometry(QtCore.QRect(20, 30, 79, 28))
        self.label_77.setStyleSheet("background-color: rgb(170, 85, 255);")
        self.label_77.setObjectName("label_77")

        self.label_3 = QtWidgets.QLabel(self.frame_2)
        self.label_3.setGeometry(QtCore.QRect(30, 90, 58, 18))
        self.label_3.setStyleSheet("background-color: rgb(170, 85, 255);")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.frame_2)
        self.label_4.setGeometry(QtCore.QRect(30, 160, 58, 18))
        self.label_4.setStyleSheet("background-color: rgb(170, 85, 255);")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.frame_2)
        self.label_5.setGeometry(QtCore.QRect(20, 230, 58, 18))
        self.label_5.setStyleSheet("background-color: rgb(170, 85, 255);")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.frame_2)
        self.label_6.setGeometry(QtCore.QRect(20, 310, 58, 18))
        self.label_6.setStyleSheet("background-color: rgb(170, 85, 255);")
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.frame_2)
        self.label_7.setGeometry(QtCore.QRect(20, 380, 58, 18))
        self.label_7.setStyleSheet("background-color: rgb(170, 85, 255);")
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.frame_2)
        self.label_8.setGeometry(QtCore.QRect(20, 440, 58, 18))
        self.label_8.setStyleSheet("background-color: rgb(170, 85, 255);")
        self.label_8.setObjectName("label_8")
        self.textEdit_2 = QtWidgets.QTextEdit(self.frame_2)
        self.textEdit_2.setGeometry(QtCore.QRect(120, 420, 421, 101))
        self.textEdit_2.setObjectName("textEdit_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(80, 0, 88, 34))
        self.pushButton.setStyleSheet("background-color: rgb(170, 0, 255);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(570, 0, 88, 34))
        self.pushButton_2.setStyleSheet("background-color: rgb(0, 85, 255);")
        self.pushButton_2.setObjectName("pushButton_2")
        MainWindow_btc.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow_btc)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1105, 30))
        self.menubar.setObjectName("menubar")
        self.menuwindows = QtWidgets.QMenu(self.menubar)
        self.menuwindows.setObjectName("menuwindows")
        self.menupayload = QtWidgets.QMenu(self.menuwindows)
        self.menupayload.setObjectName("menupayload")
        self.menuhelp = QtWidgets.QMenu(self.menubar)
        self.menuhelp.setObjectName("menuhelp")
        MainWindow_btc.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow_btc)
        self.statusbar.setObjectName("statusbar")
        MainWindow_btc.setStatusBar(self.statusbar)
        self.actionweb = QtWidgets.QAction(MainWindow_btc)
        self.actionweb.setObjectName("actionweb")
        self.actionMITM = QtWidgets.QAction(MainWindow_btc)
        self.actionMITM.setObjectName("actionMITM")
        self.actioncryptography = QtWidgets.QAction(MainWindow_btc)
        self.actioncryptography.setObjectName("actioncryptography")
        self.actionBrute_force = QtWidgets.QAction(MainWindow_btc)
        self.actionBrute_force.setObjectName("actionBrute_force")
        self.actionPhishing = QtWidgets.QAction(MainWindow_btc)
        self.actionPhishing.setObjectName("actionPhishing")
        self.actiongenerate_payload = QtWidgets.QAction(MainWindow_btc)
        self.actiongenerate_payload.setObjectName("actiongenerate_payload")
        self.actionbotnet = QtWidgets.QAction(MainWindow_btc)
        self.actionbotnet.setObjectName("actionbotnet")
        self.actionreverse_shell = QtWidgets.QAction(MainWindow_btc)
        self.actionreverse_shell.setObjectName("actionreverse_shell")
        self.actionport_scan = QtWidgets.QAction(MainWindow_btc)
        self.actionport_scan.setObjectName("actionport_scan")
        self.actiongoogle_dork = QtWidgets.QAction(MainWindow_btc)
        self.actiongoogle_dork.setObjectName("actiongoogle_dork")
        self.actionVulnerability_scan = QtWidgets.QAction(MainWindow_btc)
        self.actionVulnerability_scan.setObjectName("actionVulnerability_scan")
        self.actionabout = QtWidgets.QAction(MainWindow_btc)
        self.actionabout.setObjectName("actionabout")
        self.menupayload.addAction(self.actiongenerate_payload)
        self.menupayload.addAction(self.actionbotnet)
        self.menupayload.addAction(self.actionreverse_shell)
        self.menuwindows.addAction(self.actionweb)
        self.menuwindows.addAction(self.actionMITM)
        self.menuwindows.addAction(self.actioncryptography)
        self.menuwindows.addAction(self.menupayload.menuAction())
        self.menuwindows.addAction(self.actionBrute_force)
        self.menuwindows.addAction(self.actionPhishing)
        self.menuwindows.addAction(self.actionport_scan)
        self.menuwindows.addAction(self.actiongoogle_dork)
        self.menuwindows.addAction(self.actionVulnerability_scan)
        self.menuhelp.addAction(self.actionabout)
        self.menubar.addAction(self.menuwindows.menuAction())
        self.menubar.addAction(self.menuhelp.menuAction())

        self.frame_2.hide()
        self.frame.hide()

        self.retranslateUi(MainWindow_btc)
        self.pushButton.clicked.connect(self.frame.show)
        self.pushButton.clicked.connect(self.frame_2.hide)
        self.pushButton_2.clicked.connect(self.frame_2.show)
        self.pushButton_2.clicked.connect(self.frame.hide)
        QtCore.QMetaObject.connectSlotsByName(MainWindow_btc)

    def aboutss(self):
        from scpt_GUI_about import Ui_MainWindow_about
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_about()
        self.ui.setupUi(self.Form)
        # MainWindow_btc.close()
        self.Form.show()

    def websss(self, MainWindow_btc):
        from scpt_GUI_Web_scan import Ui_MainWindow_WS
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_WS()
        self.ui.setupUi(self.Form)
        MainWindow_btc.close()
        self.Form.show()

    def mitmsss(self, MainWindow_btc):
        from scpt_GUI_MITM import Ui_MainWindow_Mitm
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_Mitm()
        self.ui.setupUi(self.Form)
        MainWindow_btc.close()
        self.Form.show()

    def crptosss(self, MainWindow_btc):
        from scpt_GUI_cryptography import Ui_MainWindow_crypto
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_crypto()
        self.ui.setupUi(self.Form)
        MainWindow_btc.close()
        self.Form.show()

    def Payload_G(self, MainWindow_btc):
        from scpt_GUI_generate_payload import Ui_MainWindow_GP
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_GP()
        self.ui.setupUi(self.Form)
        MainWindow_btc.close()
        self.Form.show()

    def Payload_Rev(self, MainWindow_btc):
        from scpt_GUI_Reverse_shell import Ui_MainWindow_RS
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_RS()
        self.ui.setupUi(self.Form)
        MainWindow_btc.close()
        self.Form.show()

    def Payload_bot(self, MainWindow_btc):
        from scpt_GUI_botnet import Ui_MainWindow_botnet
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_botnet()
        self.ui.setupUi(self.Form)
        MainWindow_btc.close()
        self.Form.show()

    def Brutessss(self, MainWindow_btc):
        from scpt_GUI_brute_force import Ui_MainWindow_brute
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_brute()
        self.ui.setupUi(self.Form)
        MainWindow_btc.close()
        self.Form.show()

    def Phisssss(self, MainWindow_btc):
        from scpt_GUI_Phishing import Ui_MainWindow_Ph
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_Ph()
        self.ui.setupUi(self.Form)
        MainWindow_btc.close()
        self.Form.show()



    def Googlesss(self, MainWindow_btc):
        from scpt_GUI_Google_Dork import Ui_MainWindow_GD
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_GD()
        self.ui.setupUi(self.Form)
        MainWindow_btc.close()
        self.Form.show()

    def Port_scansss(self, MainWindow_btc):
        from scpt_GUI_Port_scan import Ui_MainWindow_PS
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_PS()
        self.ui.setupUi(self.Form)
        MainWindow_btc.close()
        self.Form.show()

    def vunlssss(self, MainWindow_btc):
        from scpt_GUI_vulnerability_search import Ui_MainWindow_VS
        # code the 2nd screen here
        self.Form = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow_VS()
        self.ui.setupUi(self.Form)
        MainWindow_btc.close()
        self.Form.show()
    def RowTx(self):

        from btc_exploit import rsz_exploit, raw_tx
        TxId: str = str(self.lineEdit.text())
        RX = raw_tx.Get_RAW_TX()
        RX_Output: str = RX.raw_txt(TxId)
        print(RX_Output)
        self.textEdit.setText(str(RX_Output))
    def RSZexploit(self):
        from btc_exploit import rsz_exploit, raw_tx
        r: str = str(self.lineEdit_2.text())
        s1: str = str(self.lineEdit_3.text())
        z1: str = str(self.lineEdit_4.text())
        s2: str = str(self.lineEdit_5.text())
        z2: str = str(self.lineEdit_6.text())
        address: str = str(self.lineEdit_77.text())
        RSz = rsz_exploit.RSZ_EXploit()
        RSz_out: Set[str] = RSz.exploit(address, r, s1, s2, z1, z2)
        print(RSz_out)
        # self.textEdit_2.setText(str("private_kay:"))
        self.textEdit_2.append(str(RSz_out))


    def retranslateUi(self, MainWindow_btc):
        _translate = QtCore.QCoreApplication.translate
        MainWindow_btc.setWindowTitle(_translate("MainWindow", "SCPT-BTC-Exploit"))
        self.label.setText(_translate("MainWindow", "TXID:"))
        self.label_2.setText(_translate("MainWindow", "output:"))
        self.pushButton_3.setText(_translate("MainWindow", "sub"))
        self.pushButton_3.clicked.connect(self.RowTx)
        self.pushButton_4.setText(_translate("MainWindow", "sub"))
        self.pushButton_4.clicked.connect(self.RSZexploit)
        self.label_77.setText(_translate("MainWindow", "btc_address:"))
        self.label_3.setText(_translate("MainWindow", "R_value:"))
        self.label_4.setText(_translate("MainWindow", "S1_value:"))
        self.label_5.setText(_translate("MainWindow", "Z1_value:"))
        self.label_6.setText(_translate("MainWindow", "S2_value:"))
        self.label_7.setText(_translate("MainWindow", "Z2_value:"))
        self.label_8.setText(_translate("MainWindow", "output:"))
        self.pushButton.setText(_translate("MainWindow", "rawTXT"))
        self.pushButton_2.setText(_translate("MainWindow", "exploit"))
        self.menuwindows.setTitle(_translate("MainWindow", "windows"))
        self.menupayload.setTitle(_translate("MainWindow", "payload"))
        self.menuhelp.setTitle(_translate("MainWindow", "help"))
        self.actionweb.setText(_translate("MainWindow", "web"))
        self.actionMITM.setText(_translate("MainWindow", "MITM"))
        self.actioncryptography.setText(_translate("MainWindow", "cryptography"))
        self.actionBrute_force.setText(_translate("MainWindow", "Brute-force"))
        self.actionPhishing.setText(_translate("MainWindow", "Phishing"))
        self.actiongenerate_payload.setText(_translate("MainWindow", "generate-payload"))
        self.actionbotnet.setText(_translate("MainWindow", "botnet"))
        self.actionreverse_shell.setText(_translate("MainWindow", "reverse-shell"))
        self.actionport_scan.setText(_translate("MainWindow", "port-scan"))
        self.actiongoogle_dork.setText(_translate("MainWindow", "google-dork"))
        self.actionVulnerability_scan.setText(_translate("MainWindow", "Vulnerability-scan"))
        self.actionabout.setText(_translate("MainWindow", "about"))

        self.actionweb.triggered.connect(lambda:self.websss(MainWindow_btc))
        self.actionMITM.triggered.connect(lambda:self.mitmsss(MainWindow_btc))
        self.actionBrute_force.triggered.connect(lambda:self.Brutessss(MainWindow_btc))
        self.actioncryptography.triggered.connect(lambda:self.crptosss(MainWindow_btc))
        self.actionPhishing.triggered.connect(lambda:self.Phisssss(MainWindow_btc))
        self.actiongenerate_payload.triggered.connect(lambda:self.Payload_G(MainWindow_btc))
        self.actionreverse_shell.triggered.connect(lambda:self.Payload_Rev(MainWindow_btc))
        self.actionbotnet.triggered.connect(lambda:self.Payload_bot(MainWindow_btc))
        self.actiongoogle_dork.triggered.connect(lambda:self.Googlesss(MainWindow_btc))
        self.actionport_scan.triggered.connect(lambda:self.Port_scansss(MainWindow_btc))
        self.actionVulnerability_scan.triggered.connect(lambda:self.vunlssss(MainWindow_btc))
        self.actionabout.triggered.connect(self.aboutss)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow_btc = QtWidgets.QMainWindow()
    ui = Ui_MainWindow_btc()
    ui.setupUi(MainWindow_btc)
    MainWindow_btc.show()
    sys.exit(app.exec_())
